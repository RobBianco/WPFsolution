<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    mc:Ignorable="d">
   <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Button}">
               <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="5">
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="Background" Value="{StaticResource Background2Brush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Cursor" Value="Hand" />

      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource Background3Brush}" />
         </Trigger>
         <Trigger Property="IsPressed" Value="True">
            <Setter Property="Background" Value="{StaticResource Background1Brush}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="ButtonPin"
          BasedOn="{StaticResource ButtonStyle}"
          TargetType="{x:Type Button}">
      <Setter Property="Background" Value="{StaticResource BackgroundBrush}" />
   </Style>

   <Style TargetType="{x:Type ToggleButton}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ToggleButton}">
               <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="5">
                  <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="Background" Value="{StaticResource Background2Brush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Cursor" Value="Hand" />
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource Background2Brush}" />
         </Trigger>
         <Trigger Property="IsChecked" Value="True">
            <Setter Property="Background" Value="DarkGoldenrod" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style TargetType="{x:Type TextBox}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type TextBox}">
               <Border Background="{TemplateBinding Background}"
                       BorderBrush="{TemplateBinding BorderBrush}"
                       BorderThickness="{TemplateBinding BorderThickness}"
                       CornerRadius="5">
                  <ScrollViewer x:Name="PART_ContentHost" Margin="5,0" />
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
      <Setter Property="Background" Value="{StaticResource Background2Brush}" />
      <Setter Property="BorderThickness" Value="0" />
      <Setter Property="Foreground" Value="#bdbcbe" />
      <Setter Property="HorizontalContentAlignment" Value="Stretch" />
      <Setter Property="VerticalContentAlignment" Value="Stretch" />
      <Style.Triggers>
         <Trigger Property="IsMouseOver" Value="True">
            <Setter Property="Background" Value="{StaticResource Background2Brush}" />
         </Trigger>
      </Style.Triggers>
   </Style>

   <Style x:Key="ListBoxSelectedItem" TargetType="{x:Type ListBoxItem}">
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ListBoxItem}">
               <Grid>
                  <Border Name="LeftBd"
                          Width="3"
                          Height="30"
                          HorizontalAlignment="Left"
                          Panel.ZIndex="3"
                          CornerRadius="2" />
                  <Border Name="Bd"
                          CornerRadius="5"
                          SnapsToDevicePixels="True">
                     <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                       SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                  </Border>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="IsMouseOver" Value="True">
                     <Setter TargetName="Bd" Property="Background" Value="{StaticResource Background3Brush}" />
                  </Trigger>

                  <Trigger Property="IsSelected" Value="True">
                     <Setter TargetName="Bd" Property="Background" Value="{StaticResource Background3Brush}" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
         </Grid.ColumnDefinitions>
         <Border x:Name="Border"
                 Grid.ColumnSpan="2"
                 Background="{StaticResource Background2Brush}"
                 BorderThickness="1"
                 CornerRadius="5" />
         <Border Grid.Column="0"
                 Margin="1"
                 CornerRadius="2,0,0,2">
            <Border.Background>
               <SolidColorBrush Color="{StaticResource Background2}" />
            </Border.Background>
         </Border>
         <Path x:Name="Arrow"
               Grid.Column="1"
               HorizontalAlignment="Center"
               VerticalAlignment="Center"
               Data="M 0 0 L 4 4 L 8 0 Z">
            <Path.Fill>
               <SolidColorBrush Color="LightGray" />
            </Path.Fill>
         </Path>
         <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
               <VisualState x:Name="Normal" />
               <VisualState x:Name="MouseOver">
                  <Storyboard>
                     <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                     </ColorAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Pressed" />
               <VisualState x:Name="Disabled">
                  <Storyboard>
                     <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                     </ColorAnimationUsingKeyFrames>
                     <ColorAnimationUsingKeyFrames Storyboard.TargetName="Arrow" Storyboard.TargetProperty="(Shape.Fill).                 (SolidColorBrush.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                     </ColorAnimationUsingKeyFrames>
                     <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Border.BorderBrush).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledBorderDarkColor}" />
                     </ColorAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="CheckStates">
               <VisualState x:Name="Checked">
                  <Storyboard>
                     <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                 (GradientBrush.GradientStops)[1].(GradientStop.Color)">
                        <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlPressedColor}" />
                     </ColorAnimationUsingKeyFrames>
                  </Storyboard>
               </VisualState>
               <VisualState x:Name="Unchecked" />
               <VisualState x:Name="Indeterminate" />
            </VisualStateGroup>
         </VisualStateManager.VisualStateGroups>
      </Grid>
   </ControlTemplate>

   <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
      <Border x:Name="PART_ContentHost"
              Background="{TemplateBinding Background}"
              Focusable="False" />
   </ControlTemplate>

   <Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
      <Setter Property="SnapsToDevicePixels" Value="true" />
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
      <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
      <Setter Property="MinWidth" Value="120" />
      <Setter Property="MinHeight" Value="20" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBox}">
               <Grid>
                  <ToggleButton x:Name="ToggleButton"
                                ClickMode="Press"
                                Focusable="false"
                                IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                Template="{StaticResource ComboBoxToggleButton}" />
                  <ContentPresenter x:Name="ContentSite"
                                    Margin="3,3,23,3"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Stretch"
                                    Content="{TemplateBinding SelectionBoxItem}"
                                    ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                    IsHitTestVisible="False" />
                  <TextBox x:Name="PART_EditableTextBox"
                           Margin="3,3,23,3"
                           HorizontalAlignment="Left"
                           VerticalAlignment="Center"
                           Background="Transparent"
                           Focusable="True"
                           Foreground="LightGray"
                           IsReadOnly="{TemplateBinding IsReadOnly}"
                           Style="{x:Null}"
                           Template="{StaticResource ComboBoxTextBox}"
                           Visibility="Hidden" />
                  <Popup x:Name="Popup"
                         AllowsTransparency="True"
                         Focusable="False"
                         IsOpen="{TemplateBinding IsDropDownOpen}"
                         Placement="Bottom"
                         PopupAnimation="Slide">
                     <Grid x:Name="DropDown"
                           MinWidth="{TemplateBinding ActualWidth}"
                           MaxHeight="{TemplateBinding MaxDropDownHeight}"
                           SnapsToDevicePixels="True">
                        <Border x:Name="DropDownBorder" BorderThickness="1">
                           <Border.BorderBrush>
                              <SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
                           </Border.BorderBrush>
                           <Border.Background>
                              <SolidColorBrush Color="{DynamicResource ControlLightColor}" />
                           </Border.Background>
                        </Border>
                        <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                           <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                     </Grid>
                  </Popup>
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver" />
                        <VisualState x:Name="Disabled">
                           <Storyboard>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(TextElement.Foreground).                       (SolidColorBrush.Color)">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledForegroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                     <VisualStateGroup x:Name="EditStates">
                        <VisualState x:Name="Editable">
                           <Storyboard>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_EditableTextBox" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
                              </ObjectAnimationUsingKeyFrames>
                              <ObjectAnimationUsingKeyFrames Storyboard.TargetName="ContentSite" Storyboard.TargetProperty="(UIElement.Visibility)">
                                 <DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
                              </ObjectAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Uneditable" />
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="HasItems" Value="false">
                     <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
                  </Trigger>
                  <Trigger Property="IsGrouping" Value="true">
                     <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                  </Trigger>
                  <Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
                     <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
                     <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="{x:Type ComboBoxItem}" TargetType="{x:Type ComboBoxItem}">
      <Setter Property="SnapsToDevicePixels" Value="true" />
      <Setter Property="OverridesDefaultStyle" Value="true" />
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type ComboBoxItem}">
               <Border x:Name="Border"
                       Padding="2"
                       Background="Transparent"
                       SnapsToDevicePixels="true">
                  <ContentPresenter />
                  <VisualStateManager.VisualStateGroups>
                     <VisualStateGroup x:Name="SelectionStates">
                        <VisualState x:Name="Unselected" />
                        <VisualState x:Name="Selected">
                           <Storyboard>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                              </ColorAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                        <VisualState x:Name="SelectedUnfocused">
                           <Storyboard>
                              <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background).                     (SolidColorBrush.Color)">
                                 <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedUnfocusedColor}" />
                              </ColorAnimationUsingKeyFrames>
                           </Storyboard>
                        </VisualState>
                     </VisualStateGroup>
                  </VisualStateManager.VisualStateGroups>
               </Border>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>
</ResourceDictionary>